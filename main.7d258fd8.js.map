{"version":3,"sources":["scripts/main.js"],"names":["score","document","querySelector","button","fieldCell","querySelectorAll","message","restartGame","forEach","ch","i","textContent","classList","className","startsWith","baseClass","remove","randomNum1","randomVal2","randomValue","randomNum2","randomVal1","Math","floor","random","length","add","removeClass","elem1","clasLs","ArrowUp","newValuePl","c","newAr","cer","push","caunt","l","li","r","currElem","newR","prevElem","total","filter","el","emtyOr","randomCo","ArrowDown","ArrowLeft","newCol","ArrowRight","noMovesLeft","youCanMoove","currentCell","neighbors","row","col","neighbor","isValid","youWon","some","Array","from","addEventListener","event","key"],"mappings":"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","file":"main.7d258fd8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst score = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\nlet fieldCell = document.querySelectorAll('.field-cell');\nconst message = document.querySelectorAll('.message');\n\nfieldCell = Array.from(fieldCell);\n\n// change fieldCell so that all array methods are available.\nfunction restartGame() {\n  fieldCell.forEach((ch, i) => {\n    fieldCell[i].textContent = ''; // I delete all the numbers\n\n    const baseClass = 'field-cell';\n\n    const classList = fieldCell[i].classList;\n\n    // Remove all classes starting with \"field-cell--\"\n    classList.forEach(className => {\n      if (className.startsWith(`${baseClass}--`)) {\n        fieldCell[i].classList.remove(className);\n      }\n    });\n  });\n\n  const randomNum1 = randomValue();\n  const randomNum2 = randomValue();\n  const randomVal1 = Math.floor(Math.random() * fieldCell.length);\n  let randomVal2;\n\n  // the condition is true as long as the two indices are equal\n  do {\n    randomVal2 = Math.floor(Math.random() * fieldCell.length);\n  } while (randomVal1 === randomVal2);\n\n  fieldCell[randomVal1].textContent = randomNum1;\n  fieldCell[randomVal2].textContent = randomNum2;\n  fieldCell[randomVal1].classList.add(`field-cell--${randomNum1}`);\n  fieldCell[randomVal2].classList.add(`field-cell--${randomNum2}`);\n}\n\nfunction removeClass(elem1) {\n  const clasLs = elem1.classList;\n\n  for (const className of clasLs) {\n    if (className.startsWith(`field-cell--`)) {\n      elem1.classList.remove(className);\n    }\n  }\n}\n\nfunction randomValue() {\n  const random = Math.random();\n\n  return random <= 0.1 ? 4 : 2;\n}\n\nfunction ArrowUp() {\n  let newValuePl = false;\n\n  // cycles 1, 2 are required to pass the tile from top to bottom,\n  // replacing the previous element with the current one\n  for (let c = 0; c < 4; c++) { // 1\n    const newAr = [];\n\n    // Cycles 1_1 and 1_2 are necessary for\n    // information - how many times can be merged.\n    for (let i = 0; i < 4; i++) { // 1_1\n      const cer = fieldCell[c + (i * 4)].textContent;\n\n      newAr.push(cer);\n    }\n\n    let caunt = 0;\n\n    for (let l = 0; l < newAr.length; l++) { // 1_2\n      if (newAr[l] !== '') {\n        for (let li = 0; li < newAr.length; li++) {\n          if (newAr[l] === newAr[li] && li !== l) {\n            caunt++;\n            newAr[l] = `0, ${l}`;\n            newAr[li] = `0, ${li}`;\n          }\n        }\n      }\n    }\n\n    for (let r = 1; r < 4; r++) { // 2\n      const currElem = fieldCell[c + (r * 4)].textContent;\n\n      if (currElem !== '') {\n        let newR = r;\n\n        while (newR > 0) { // the while loop is needed to move the tile up\n          const prevElem = fieldCell[c + ((newR - 1) * 4)].textContent;\n\n          if (prevElem === '') {\n            // replaces the previous tile with the current one\n            fieldCell[c + ((newR - 1) * 4)].textContent = currElem;\n            fieldCell[c + (newR * 4)].textContent = '';\n            newValuePl = true;\n\n            fieldCell[c + ((newR - 1) * 4)]\n              .classList.add(`field-cell--${currElem}`);\n            removeClass(fieldCell[c + (newR * 4)]);\n          } else if (prevElem === currElem && caunt > 0) {\n            // can be merged\n            const total = (+prevElem) + (+currElem);\n\n            fieldCell[c + ((newR - 1) * 4)].textContent = '' + total;\n            fieldCell[c + (newR * 4)].textContent = '';\n            score.textContent = (+score.textContent) + total;\n            newValuePl = true;\n            caunt--;\n            // I delete all classes that begin with field-cell--\n            // and add a new one\n            removeClass(fieldCell[c + ((newR - 1) * 4)]);\n\n            fieldCell[c + ((newR - 1) * 4)]\n              .classList.add(`field-cell--${'' + total}`);\n            removeClass(fieldCell[c + (newR * 4)]);\n          } else {\n            break;\n          }\n          newR--;\n        }\n      }\n    }\n  }\n\n  // creating a new tile\n  if (newValuePl) {\n    const lengthFil = fieldCell.filter(el => el.textContent === '');\n\n    if (lengthFil.length > 0) {\n      let emtyOr = Math.floor(Math.random() * 16);\n\n      while (fieldCell[emtyOr].textContent !== '') {\n        emtyOr = Math.floor(Math.random() * 16);\n      }\n\n      const randomCo = randomValue();\n\n      fieldCell[emtyOr].textContent = randomCo;\n      fieldCell[emtyOr].classList.add(`field-cell--${randomCo}`);\n    }\n  }\n}\n\nfunction ArrowDown() {\n  let newValuePl = false;\n\n  for (let c = 0; c < 4; c++) {\n    const newAr = [];\n\n    for (let i = 0; i < 4; i++) {\n      const cer = fieldCell[c + (i * 4)].textContent;\n\n      newAr.push(cer);\n    }\n\n    let caunt = 0;\n\n    for (let l = 0; l < newAr.length; l++) {\n      if (newAr[l] !== '') {\n        for (let li = 0; li < newAr.length; li++) {\n          if (newAr[l] === newAr[li] && li !== l) {\n            caunt++;\n            newAr[l] = `0, ${l}`;\n            newAr[li] = `0, ${li}`;\n          }\n        }\n      }\n    }\n\n    for (let r = 2; r >= 0; r--) {\n      const currElem = fieldCell[c + (r * 4)].textContent;\n\n      if (currElem !== '') {\n        let newR = r;\n\n        while (newR < 3) {\n          const prevElem = fieldCell[c + ((newR + 1) * 4)].textContent;\n\n          if (prevElem === '') {\n            fieldCell[c + (newR * 4)].textContent = '';\n            fieldCell[c + ((newR + 1) * 4)].textContent = currElem;\n            newValuePl = true;\n\n            fieldCell[c + ((newR + 1) * 4)]\n              .classList.add(`field-cell--${currElem}`);\n            removeClass(fieldCell[c + (newR * 4)]);\n          } else if (prevElem === currElem && caunt > 0) {\n            const total = (+prevElem) + (+currElem);\n\n            fieldCell[c + ((newR + 1) * 4)].textContent = '' + total;\n            fieldCell[c + (newR * 4)].textContent = '';\n            score.textContent = (+score.textContent) + total;\n            newValuePl = true;\n            caunt--;\n            removeClass(fieldCell[c + ((newR + 1) * 4)]);\n\n            fieldCell[c + ((newR + 1) * 4)]\n              .classList.add(`field-cell--${'' + total}`);\n            removeClass(fieldCell[c + (newR * 4)]);\n          } else {\n            break;\n          }\n\n          newR++;\n        }\n      }\n    }\n  }\n\n  if (newValuePl) {\n    const lengthFil = fieldCell.filter(el => el.textContent === '');\n\n    if (lengthFil.length > 0) {\n      let emtyOr = Math.floor(Math.random() * 16);\n\n      while (fieldCell[emtyOr].textContent !== '') {\n        emtyOr = Math.floor(Math.random() * 16);\n      }\n\n      const randomCo = randomValue();\n\n      fieldCell[emtyOr].textContent = randomCo;\n      fieldCell[emtyOr].classList.add(`field-cell--${randomCo}`);\n    }\n  }\n}\n\nfunction ArrowLeft() {\n  let newValuePl = false;\n\n  for (let r = 0; r < 4; r++) {\n    const newAr = [];\n\n    for (let i = 0; i < 4; i++) {\n      const cer = fieldCell[i + (r * 4)].textContent;\n\n      newAr.push(cer);\n    }\n\n    let caunt = 0;\n\n    for (let l = 0; l < newAr.length; l++) {\n      if (newAr[l] !== '') {\n        for (let li = 0; li < newAr.length; li++) {\n          if (newAr[l] === newAr[li] && li !== l) {\n            caunt++;\n            newAr[l] = `0, ${l}`;\n            newAr[li] = `0, ${li}`;\n          }\n        }\n      }\n    }\n\n    for (let c = 1; c < 4; c++) {\n      const currElem = fieldCell[c + (r * 4)].textContent;\n\n      if (currElem !== '') {\n        let newCol = c;\n\n        while (newCol > 0) {\n          const prevElem = fieldCell[(newCol - 1) + (r * 4)].textContent;\n\n          if (prevElem === '') {\n            fieldCell[(newCol - 1) + (r * 4)].textContent = currElem;\n            fieldCell[newCol + (r * 4)].textContent = '';\n            newValuePl = true;\n\n            fieldCell[(newCol - 1) + (r * 4)]\n              .classList.add(`field-cell--${currElem}`);\n            removeClass(fieldCell[newCol + (r * 4)]);\n          } else if (prevElem === currElem && caunt > 0) {\n            const total = (+prevElem) + (+currElem);\n\n            fieldCell[(newCol - 1) + (r * 4)].textContent = '' + total;\n            fieldCell[newCol + (r * 4)].textContent = '';\n            score.textContent = (+score.textContent) + total;\n            newValuePl = true;\n            caunt--;\n            removeClass(fieldCell[(newCol - 1) + (r * 4)]);\n\n            fieldCell[(newCol - 1) + (r * 4)]\n              .classList.add(`field-cell--${'' + total}`);\n            removeClass(fieldCell[newCol + (r * 4)]);\n          } else {\n            break;\n          }\n\n          newCol--;\n        }\n      }\n    }\n  }\n\n  if (newValuePl) {\n    const lengthFil = fieldCell.filter(el => el.textContent === '');\n\n    if (lengthFil.length > 0) {\n      let emtyOr = Math.floor(Math.random() * 16);\n\n      while (fieldCell[emtyOr].textContent !== '') {\n        emtyOr = Math.floor(Math.random() * 16);\n      }\n\n      const randomCo = randomValue();\n\n      fieldCell[emtyOr].textContent = randomCo;\n      fieldCell[emtyOr].classList.add(`field-cell--${randomCo}`);\n    }\n  }\n}\n\nfunction ArrowRight() {\n  let newValuePl = false;\n\n  for (let r = 0; r < 4; r++) {\n    const newAr = [];\n\n    for (let i = 0; i < 4; i++) {\n      const cer = fieldCell[i + (r * 4)].textContent;\n\n      newAr.push(cer);\n    }\n\n    let caunt = 0;\n\n    for (let l = 0; l < newAr.length; l++) {\n      if (newAr[l] !== '') {\n        for (let li = 0; li < newAr.length; li++) {\n          if (newAr[l] === newAr[li] && li !== l) {\n            caunt++;\n            newAr[l] = `0, ${l}`;\n            newAr[li] = `0, ${li}`;\n          }\n        }\n      }\n    }\n\n    for (let c = 2; c >= 0; c--) {\n      const currElem = fieldCell[c + (r * 4)].textContent;\n\n      if (currElem !== '') {\n        let newCol = c;\n\n        while (newCol < 3) {\n          const prevElem = fieldCell[(newCol + 1) + (r * 4)].textContent;\n\n          if (prevElem === '') {\n            fieldCell[(newCol + 1) + (r * 4)].textContent = currElem;\n            fieldCell[newCol + (r * 4)].textContent = '';\n            newValuePl = true;\n\n            fieldCell[(newCol + 1) + (r * 4)]\n              .classList.add(`field-cell--${currElem}`);\n            removeClass(fieldCell[newCol + (r * 4)]);\n          } else if (prevElem === currElem && caunt > 0) {\n            const total = (+prevElem) + (+currElem);\n\n            fieldCell[(newCol + 1) + (r * 4)].textContent = '' + total;\n            fieldCell[newCol + (r * 4)].textContent = '';\n            score.textContent = (+score.textContent) + total;\n            newValuePl = true;\n            caunt--;\n            removeClass(fieldCell[(newCol + 1) + (r * 4)]);\n\n            fieldCell[(newCol + 1) + (r * 4)]\n              .classList.add(`field-cell--${'' + total}`);\n            removeClass(fieldCell[newCol + (r * 4)]);\n          } else {\n            break;\n          }\n\n          newCol++;\n        }\n      }\n    }\n  }\n\n  if (newValuePl) {\n    const lengthFil = fieldCell.filter(el => el.textContent === '');\n\n    if (lengthFil.length > 0) {\n      let emtyOr = Math.floor(Math.random() * 16);\n\n      while (fieldCell[emtyOr].textContent !== '') {\n        emtyOr = Math.floor(Math.random() * 16);\n      }\n\n      const randomCo = randomValue();\n\n      fieldCell[emtyOr].textContent = randomCo;\n      fieldCell[emtyOr].classList.add(`field-cell--${randomCo}`);\n    }\n  }\n}\n\nfunction noMovesLeft() {\n  let youCanMoove = true;\n\n  for (let c = 0; c < 4; c++) {\n    for (let r = 0; r < 4; r++) {\n      const currentCell = fieldCell[c + r * 4];\n\n      if (currentCell.textContent === '') {\n        // there is an empty tile, so there are moves available\n        youCanMoove = false;\n      }\n\n      const neighbors = [\n        {\n          row: r - 1, col: c,\n        }, // The neighbor from above\n        {\n          row: r + 1, col: c,\n        }, // Neighbor from below\n        {\n          row: r, col: c - 1,\n        }, // Neighbor on the left\n        {\n          row: r, col: c + 1,\n        }, // Neighbor on the right\n      ];\n\n      for (const neighbor of neighbors) {\n        if (isValid(neighbor.row, neighbor.col)) {\n          const neighborCell = fieldCell[neighbor.col + neighbor.row * 4];\n\n          if (neighborCell.textContent === currentCell.textContent) {\n            // You can merge with neighbors, there are available moves\n            youCanMoove = false;\n          }\n        }\n      }\n    }\n  }\n\n  if (youCanMoove) {\n    // there are no moves, so we show the message about defeat\n    // and hide the message about victory if there is one.\n    message[0].classList.remove('hidden');\n    message[1].classList.add('hidden');\n  }\n}\n\n// function to check that the passed arguments pass the correct tile location\nfunction isValid(row, col) {\n  return row >= 0 && row < 4 && col >= 0 && col < 4;\n}\n\nfunction youWon() {\n  const youWond = fieldCell.some(el => el.textContent === '2048');\n\n  // shows a win message\n  if (youWond) {\n    message[1].classList.remove('hidden');\n  }\n}\n\nbutton.addEventListener('click', () => {\n  restartGame();\n  button.textContent = 'restart';\n  button.classList.remove('start');\n  button.classList.add('restart');\n  message[2].classList.add('hidden');\n\n  document.addEventListener('keydown', () => {\n    if (event.key === 'ArrowUp') {\n      ArrowUp();\n      noMovesLeft();\n      youWon();\n    }\n\n    if (event.key === 'ArrowDown') {\n      ArrowDown();\n      noMovesLeft();\n      youWon();\n    }\n\n    if (event.key === 'ArrowLeft') {\n      ArrowLeft();\n      noMovesLeft();\n      youWon();\n    }\n\n    if (event.key === 'ArrowRight') {\n      ArrowRight();\n      noMovesLeft();\n      youWon();\n    }\n  });\n});\n"]}